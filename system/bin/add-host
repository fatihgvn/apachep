#!/bin/bash

# Arguments:
# add-host [domain_base] [phpversion]
# This script combines the base domain with the stored domain extension
# and uses the stored system IP from INSTALL_DIR for host entries.

# Read the stored domain extension and system IP from INSTALL_DIR.
INSTALL_DIR="/usr/local/apachep"

if [ -f "$INSTALL_DIR/.domain" ]; then
  domain_ext=$(cat "$INSTALL_DIR/.domain")
else
  domain_ext="dev"
fi

if [ -f "$INSTALL_DIR/.ip" ]; then
  system_ip=$(cat "$INSTALL_DIR/.ip")
else
  system_ip="127.0.0.1"
fi

# Process command-line arguments.
domain_base=$1
phpversion="default"

if [ $# -eq 2 ]; then
  phpversion=$2
fi

# Combine base domain with the stored domain extension.
domain="${domain_base}.${domain_ext}"

# Set the web root path based on the full domain.
path="/var/www/$domain"
port=80

echo "$domain $port $phpversion"

# Create Apache configuration using apachep.
apachep create-conf "$domain" "$phpversion"

# If the document root doesn't exist, create necessary directories and copy templates.
if [ ! -d "$path" ]; then
  mkdir -p "$path/public_html" "$path/logs" "$path/temp" "$path/ssl" "$path/backups" "$path/conf" "$path/private"
  cp -R /usr/local/apachep/system/templates/public_html/* "$path/public_html"
  
  # Set proper ownership and permissions.
  chown -R "$SUDO_USER" "$path"
  chgrp -R www-data "$path"
  chmod g+s "$path"
  
  # Create SSL certificates.
  # apachep create-ssl "$domain"
fi

# Update /etc/hosts with the domain entry if not already present.
if ! grep -q "$domain" /etc/hosts; then
  echo "$system_ip       $domain www.$domain" >> /etc/hosts
fi

# Enable the site configuration in Apache.
a2ensite "$domain.conf"

# Restart Apache to apply changes.
systemctl restart apache2.service
