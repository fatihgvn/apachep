#!/bin/bash

# Arguments
# ftp-download [domain] [name]

if [ $# -ne 2 ]
then
    echo "Example Usage:"
    echo "ftp-download [domain] [name]"
    exit 1
fi

domain=$1
confname=$2
path=/var/www/$domain
ftpfile="$path/conf/ftp.conf"

# Get INI section
ReadINISections(){
  local filename="$1"
  gawk '{ if ($1 ~ /^\[/) section=tolower(gensub(/\[(.+)\]/,"\\1",1,$1)); configuration[section]=1 } END {for (key in configuration) { print key} }' ${filename}
}

# Get/Set all INI sections
GetINISections(){
  local filename="$1"

  sections="$(ReadINISections $filename)"
  for section in $sections; do
    array_name="configuration_${section}"
    declare -g -A ${array_name}
  done
  eval $(gawk -F= '{ 
                    if ($1 ~ /^\[/) 
                      section=tolower(gensub(/\[(.+)\]/,"\\1",1,$1)) 
                    else if ($1 !~ /^$/ && $1 !~ /^;/) {
                      gsub(/^[ \t]+|[ \t]+$/, "", $1); 
                      gsub(/[\[\]]/, "", $1);
                      gsub(/^[ \t]+|[ \t]+$/, "", $2); 
                      if (configuration[section][$1] == "")  
                        configuration[section][$1]=$2
                      else
                        configuration[section][$1]=configuration[section][$1]" "$2} 
                    } 
                    END {
                      for (section in configuration)    
                        for (key in configuration[section]) { 
                          section_name = section
                          gsub( "-", "_", section_name)
                          print "configuration_" section_name "[\""key"\"]=\""configuration[section][key]"\";"                        
                        }
                    }' ${filename}
        )


}

GetINISections "$ftpfile"

for section in $(ReadINISections "${ftpfile}"); do

    if [ $section -ne $confname ]
    then
        echo "Skipping $section..."
        continue
    fi

    echo "Running test for ${section}..."

    echo "  host        $(eval echo $\{configuration_${section}[host]\})"
    echo "  protocol    $(eval echo $\{configuration_${section}[protocol]\})"
    echo "  port        $(eval echo $\{configuration_${section}[port]\})"
    echo "  username    $(eval echo $\{configuration_${section}[username]\})"
    echo "  password    $(eval echo $\{configuration_${section}[password]\})"
    echo "  remotepath  $(eval echo $\{configuration_${section}[remotepath]\})"

    host=$(eval echo $\{configuration_${section}[host]\})
    protocol=$(eval echo $\{configuration_${section}[protocol]\})
    port=$(eval echo $\{configuration_${section}[port]\})
    username=$(eval echo $\{configuration_${section}[username]\})
    password=$(eval echo $\{configuration_${section}[password]\})
    remotepath=$(eval echo $\{configuration_${section}[remotepath]\})

    cd "$path/public_html"
#     ftp -inv $host <<EOF
#     user $username $password
#     cd $remotepath
#     prompt no
#     mget *.*
#     mget .*
#     bye
# EOF

    wget -r -m -nH --user="$username" --password="$password" "ftp://$host:$port$remotepath" .

    # Fix user permissions
    echo "Changing files permissions..."
    chown -R $SUDO_USER "/var/www/$domain/public_html"
    chgrp -R www-data "/var/www/$domain/public_html"
    chmod g+s "/var/www/$domain/public_html"

    rm /var/www/$domain/public_html/.listing
    rm /var/www/$domain/public_html/**/.listing

done
